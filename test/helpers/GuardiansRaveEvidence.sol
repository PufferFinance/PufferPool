// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.8.0 <0.9.0;

import { MockEvidence } from "rave-test/mocks/MockEvidence.sol";

contract Guardian3RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "186453210057823126547835745110511429060",
            "2023-10-16T20:17:59.516859",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhspNWPNBkpcmwf+3WZYsuncw6eX6Uijk+PzPp3dBQSebHsOEQYDRxGeFuWowvkTo2Z5HTavyoRIrSupBTqDE78HA=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f000000000000008eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008619f6cd837e7e0c5c182235222a6fbce0af1b7aa452ee117f08ee1e2ab8f5600000000000000000000000000000000000000000000000000000000000000000"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"2c3c7862299e87f941e5a9a49b96a1bc9e2fec4fc15e9ea64e8c3d6a4894cbef433248ac21402f165062936b12ffd75e6b8c4015c34991b75a558390434dcb70a184e24fec38f50929826281ae31793ea02fc3b51f009906e9febbf20abecee32b2dbb831f677babacbc4057030c4650ad4d83dc5b6b28aef78b49c26777c04820856bd36c514f0e8693c0ba7cd94a191d2418f2b0d7d2533013e5a9815b3cb785b0575648267b7990c070b26614b1de1896ade6391364157ebe06112b7a884ff059586cba4f68a02a2440136e16f5b9b65be0d20823ceb773c92191fc615cbab568b809b5beead47201161238b96815f0e9d2c37c4400e4ac794dcf2b1b3599";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"8eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"04a55b152177219971a93a64aafc2d61baeaf86526963caa260e71efa2b865527e0307d7bda85312dd6ff23bcc88f2bf228da6295239f72c31b686c48b7b69cdfd";
    }
}

contract Guardian2RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "209759971368149731737954685751527072004",
            "2023-10-16T20:17:08.742105",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhspNWPNBkpcmwf+3WZYsuncw6eX6Uijk+PzPp3dBQSebHsOEQYDRxGeFuWowvkTo2Z5HTavyoRIrSupBTqDE78HA=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f000000000000008eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bc3029f55f939dfad86a268c340aeba8d87daaa3fdc204a0ca36c839aaf0f26c0000000000000000000000000000000000000000000000000000000000000000"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"77d614e10b4f29730c14681ea0808758c22f3ffd833020fcd572dc445ca9abd2ea3e2abdcfd5a04f0975202c5f8c17812a5701346d8f75427b16455da264673e02bedb15d06945ab566d39788e586b73a0259f024a68a27b1fa40964f0b695f3394a5cd3a7af283447f5ff8adccf8091640086de1067cf85fb8ee5db5073bb6894478a9a8bee8292bcb839a10529d82300f3c9cbd548279eae92809f99d0fd6dd7280fe1a6b250d5c1e5219afa7032c4771b393d7fb0269027184013cc6bec4ec40a6699bdc967d67c57035c12f129d59559b98c7f6588aa3658bcf3542a221941ee91b100b80ca895b19464b5570537573ddb0426a09a88b2eca50875809b0e";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"8eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"04f050c3ce5d575600af388f41876e2962499a97bc8fcfa4a12adf7e4a486a3be9a1db0efd899c09723f83fe490e8215fd596a5f03c819e28a8b95f3cce6238613";
    }
}

contract Guardian1RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "171541400247265784450028677784105405930",
            "2023-10-16T20:13:06.744812",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhspNWPNBkpcmwf+3WZYsuncw6eX6Uijk+PzPp3dBQSebHsOEQYDRxGeFuWowvkTo2Z5HTavyoRIrSupBTqDE78HA=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f000000000000008eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003af0644b0725449c3def3104fd7428c3ea005f4607e13453d3c05f3aac07b600000000000000000000000000000000000000000000000000000000000000000"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"6cc5a3354c3504677252a3ee19a9d4c64eb8e8ed2bcdd8a7fcfeee88eb8214c0975730b03aeec9b1f56e7cd37030da73b63c8fefb85de1fd2ae70f4d485db8228c76c6dc5da2ce5458c172852d2faec9cca97a1ef4cc19280b84b841e05a7ee33207db18496a3fb515f978ed161d4b7e4c585e76641605be2c31418e04ac35686fa0841b3680d24dac35d8edbfa4c7549b712830b1c0064ae4c0463428ebd0ee833f341fcb2125e9c06d9e67d41f2dc3afe26b1e81d5dbaed1eab6a656e40b9188206f8fdc2745d90db2ebcb671ee44932b9ca7f607c8107bd0c96689bd6aaf9dcdd03afcb433925cacf994527121b79a425a32a86984af5434005b8f422faaa";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex"9F3C647EB5773CBB512D2732C0D7415EBB55A0FA9EDE2E649199E6821DB910D53177370977466A6A5E4786CCD2DDEBD4149D6A2F6325529DD10CC98737B0779C1A07E29C47A1AE004948476C489F45A5A15D7AC8ECC6ACC645ADB43D87679DF59C093BC5A2E9696C5478541B979E754B573914BE55D32FF4C09DDF27219934CD990527B3F92ED78FBF29246ABECB71240EF39C2D7107B447545A7FFB10EB060A68A98580219E36910952683892D6A5E2A80803193E407531404E36B315623799AA825074409754A2DFE8F5AFD5FE631E1FC2AF3808906F28A790D9DD9FE060939B125790C5805D037DF56A99531B96DE69DE33ED226CC1207D1042B5C9AB7F404FC711C0FE4769FB9578B1DC0EC469EA1A25E0FF9914886EF2699B235BB4847DD6FF40B606E6170793C2FB98B314587F9CFD257362DFEAB10B3BD2D97673A1A4BD44C453AAF47FC1F2D3D0F384F74A06F89C089F0DA6CDB7FCEEE8C9821A8E54F25C0416D18C46839A5F8012FBDD3DC74D256279ADC2C0D55AFF6F0622425D1B";
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"8eb70e76a34bf6cbf9deed7f467b4888cc187f1f1f34cce2d11ca54014149a35";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"04caf1f9cd82a1284626d405d285250fd6c4f58c469fda05d7fd4f29318aae38e7ccc6f4eaced74d3e2aa3fc0576093860d3045263c4183d694a39911ee9031c73";
    }
}
