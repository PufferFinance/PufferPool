// SPDX-License-Identifier: Apache-2.0
pragma solidity >=0.8.0 <0.9.0;

import { MockEvidence } from "rave-test/mocks/MockEvidence.sol";

contract Guardian3RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "317003438820305668509883748002428467346",
            "2023-09-06T09:02:57.885887",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhsrBrnh3hi7JBOga+j9dMkQCRClbEbCpuX8/+B244fKMo9sMqW1PAPAgorY4sg6/wTgZGaYrX6B7ITfYqY8jfs/Q=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f00000000000000b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e8004d8b521bd18a633c2d9334c7deb39ca51c3b53452b146193494a6f1e624290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"39941b44e603d0eb84cda521fa3c843ff271ebf31b8d1e4656e2e4c9797ca3570360ab6d41cdf9e8e1dd8264ccf716e33f18521154fd9ef0d1cc1add931da4820206963166e5ce8992b3ac4f1f7d5b7a79b476147261f704e5aa6abdf6bddae8a51a140d9787c977aae216cf59f872b26395fcde265fb739c67bd7262a3a51fe23f0ac9fec7f88ffac0b3f1c1f72142cbb7ebb8c146b92569a270f02afcada94efa1b5b0678d09a6dc5392a4085263620a31715b91fb5f3e859bffda4bb5767699264f1d35bb87ac1752f2087e477a849e8391176afe6a47f676a2a7741635d8f734ab5125cb62965e7b3ba1c8e3b29849207dd654114dae7a64ee0b698a96ae";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"049777a708d71e0b211eff7d44acc9d81be7bbd1bffdc14f60e784c86b64037c745b82cc5d9da0e93dd96d2fb955c32239b2d1d56a456681d4cef88bd603b9b407";
    }
}

contract Guardian2RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "255638962332323068350582484765465521313",
            "2023-09-06T09:02:36.125204",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhsrBrnh3hi7JBOga+j9dMkQCRClbEbCpuX8/+B244fKMo9sMqW1PAPAgorY4sg6/wTgZGaYrX6B7ITfYqY8jfs/Q=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f00000000000000b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e5157e8a0f297cea8f3ffb1ebc7b31ca040fc331a03f93ea67d2d974117da85b290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"2ee083e11795e39d4326d1289790f6bbe750731bc30406d98180ee9c7999fd397cd005f38a557ffe43aba8ff9ceec74b3d55ebb1e3f7d585dd108281392aaa692e8e54f91fa64bfc74fc6d96bbe452db541994794e511a72655bdfa80ac254bf61d43691ef7b69b6d6be86c439612df75383a4a932457920098f60a0c7f3f757c5e769e57c8a14f8fa6b5511574df4cb720c1d663efde28c1d42daa104dbdd71f256e7ee87439ab51f361bd0623d837ea984d0a7f3dc2b12fa67cad415c7fa2149273e431b8b8f37d0961fb842fed178b7564ce689d4fde646dd0a22ffc0fc254e20065174bc58501b15b854a690e03272a8987d8ea792d628d8ba13a0a46356";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"0440ba2fa6602bdb09e40d8b400b0c82124c14c8666659c0c78d8e474f3e230d92597cd4811484e1a15d6886745ed6d3fbde7e66f1376e396d8d4e8fa67458a140";
    }
}

contract Guardian1RaveEvidence is MockEvidence {
    function report() public pure override returns (bytes memory) {
        // Report is inputted as abi-encoded JSON values
        return abi.encode(
            "56763225389687359246706216746732829064",
            "2023-09-06T09:02:14.764248",
            "4",
            "EbrM6X6YCH3brjPXT23gVh/I2EG5sVfHYh+S54fb0rrAqVRTiRTOSfLsWSVTZc8wrazGG7oooGoMU7Gj5TEhsrBrnh3hi7JBOga+j9dMkQCRClbEbCpuX8/+B244fKMo9sMqW1PAPAgorY4sg6/wTgZGaYrX6B7ITfYqY8jfs/Q=",
            "https://security-center.intel.com",
            "[\"INTEL-SA-00334\",\"INTEL-SA-00615\"]",
            "SW_HARDENING_NEEDED",
            // Already Base64 decoded off-chain
            hex"02000100ac0c00000d000d000000000042616c98d53c9712639447c9b0e7003f0000000000000000000000000000000015150b07ff800e000000000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000001f00000000000000b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079000000000000000000000000000000000000000000000000000000000000000083d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002fa89a3fddf87e84ca0bafec51d878fdd28df71449be034627033a7fa4858b4c290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563"
        );
    }

    // The leaf x509 signing certificate's signature over the report
    function sig() public pure override returns (bytes memory) {
        // base64 decoded signature as hex
        return
        hex"8fe8dd7c2e9a2247f1a08ca581e9988f2e0faa0b724e3c227cb2fc9d370b36ac9651c9b104deb2c6ccf27bf2368c157fbfaccf23dd498e3724e174c7e51aa2727cfa5a0276573faa45e6c3669c7daaea49d90c3ca62c50fdace9100be117031aa4447110eb1665d9afd7133c7f9344985a07b46254bebb7020b4c9b81a0ff331c0b3ad03c50e7c3072e103f44650fe10a1acb80ee91fde12fe579ddf8a8a661ecb84d309236abbc5668a886345c21e81a525ef641e0df9a3b3bf8efcc1728fa5aebdc084a6b392a50e1f0aa517fd6084de5a9de2f4fc61f5742e53ee20300430f4eb143dd29e3840c6b90076c71fcc71aca392dafe4c488b102367f1f1cdbfa2";
    }

    // The leaf x509 signing certificate used to sign the report
    function signingCert() public pure override returns (bytes memory) {
        return
        hex"308204a130820309a003020102020900d107765d32a3b096300d06092a864886f70d01010b0500307e310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e3130302e06035504030c27496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e67204341301e170d3136313132323039333635385a170d3236313132303039333635385a307b310b3009060355040613025553310b300906035504080c0243413114301206035504070c0b53616e746120436c617261311a3018060355040a0c11496e74656c20436f72706f726174696f6e312d302b06035504030c24496e74656c20534758204174746573746174696f6e205265706f7274205369676e696e6730820122300d06092a864886f70d01010105000382010f003082010a0282010100a97a2de0e66ea6147c9ee745ac0162686c7192099afc4b3f040fad6de093511d74e802f510d716038157dcaf84f4104bd3fed7e6b8f99c8817fd1ff5b9b864296c3d81fa8f1b729e02d21d72ffee4ced725efe74bea68fbc4d4244286fcdd4bf64406a439a15bcb4cf67754489c423972b4a80df5c2e7c5bc2dbaf2d42bb7b244f7c95bf92c75d3b33fc5410678a89589d1083da3acc459f2704cd99598c275e7c1878e00757e5bdb4e840226c11c0a17ff79c80b15c1ddb5af21cc2417061fbd2a2da819ed3b72b7efaa3bfebe2805c9b8ac19aa346512d484cfc81941e15f55881cc127e8f7aa12300cd5afb5742fa1d20cb467a5beb1c666cf76a368978b50203010001a381a43081a1301f0603551d2304183016801478437b76a67ebcd0af7e4237eb357c3b8701513c300e0603551d0f0101ff0404030206c0300c0603551d130101ff0402300030600603551d1f045930573055a053a051864f687474703a2f2f7472757374656473657276696365732e696e74656c2e636f6d2f636f6e74656e742f43524c2f5347582f4174746573746174696f6e5265706f72745369676e696e6743412e63726c300d06092a864886f70d01010b050003820181006708b61b5c2bd215473e2b46af99284fbb939d3f3b152c996f1a6af3b329bd220b1d3b610f6bce2e6753bded304db21912f385256216cfcba456bd96940be892f5690c260d1ef84f1606040222e5fe08e5326808212a447cfdd64a46e94bf29f6b4b9a721d25b3c4e2f62f58baed5d77c505248f0f801f9fbfb7fd752080095cee80938b339f6dbb4e165600e20e4a718812d49d9901e310a9b51d66c79909c6996599fae6d76a79ef145d9943bf1d3e35d3b42d1fb9a45cbe8ee334c166eee7d32fcdc9935db8ec8bb1d8eb3779dd8ab92b6e387f0147450f1e381d08581fb83df33b15e000a59be57ea94a3a52dc64bdaec959b3464c91e725bbdaea3d99e857e380a23c9d9fb1ef58e9e42d71f12130f9261d7234d6c37e2b03dba40dfdfb13ac4ad8e13fd3756356b6b50015a3ec9580b815d87c2cef715cd28df00bbf2a3c403ebf6691b3f05edd9143803ca085cff57e053eec2f8fea46ea778a68c9be885bc28225bc5f309be4a2b74d3a03945319dd3c7122fed6ff53bb8b8cb3a03c";
    }

    // The extracted RSA modulus of the leaf x509 signing certificate
    function signingMod() public pure override returns (bytes memory) {
        return
        hex
    }

    // The extracted RSA exponent of the leaf x509 signing certificate
    function signingExp() public pure override returns (bytes memory) {
        return hex"010001";
    }

    // The expected MRENCLAVE value in this specific report
    function mrenclave() public pure override returns (bytes32) {
        return hex"b8a5f3f33abd56aec48109c3ed1b45610b7958780cb96ddcabfe3b294ab49079";
    }

    // The expected MRSIGNER value in this specific report
    function mrsigner() public pure override returns (bytes32) {
        return hex"83d719e77deaca1470f6baf62a4d774303c899db69020f9c70ee1dfc08c7ce9e";
    }

    // The expected payload value in this specific report
    function payload() public pure override returns (bytes memory) {
        // This is a hex-encoded 48 byte BLS public key
        return
        hex"048289b999a1a6bc0cc6550ea018d03adee9bfeae6441e53e2e5eed22232a2b8f2d87cf1619c263971a6ada43f7310f37f473de7262ab63778fe3a859c68dc2e27";
    }
}
